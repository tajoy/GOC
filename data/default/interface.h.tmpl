<?py # -*- coding: utf-8 -*- ?>
<?py include('./header.h.tmpl') ?>

#ifndef _#{big_snake_id}_H_
#define _#{big_snake_id}_H_

/************ includes ************/
#include <glib-object.h>

/************ defines ************/
G_BEGIN_DECLS

<?py if prefix.strip() == "" or prefix == None: ?>
    <?py MACRO_TYPE = "TYPE_" + big_snake_name ?>
    <?py MACRO_OBJ = big_snake_name ?>
    <?py MACRO_IS_OBJ = "IS_" + big_snake_name ?>
    <?py MACRO_GET_INTERFACE = "GET_" + big_snake_name + "_INTERFACE" ?>
<?py else: ?>
    <?py MACRO_TYPE = prefix.upper() + "_TYPE_" + big_snake_name ?>
    <?py MACRO_OBJ = prefix.upper() + "_" + big_snake_name ?>
    <?py MACRO_IS_OBJ = prefix.upper() + "_IS_" + big_snake_name ?>
    <?py MACRO_GET_INTERFACE = prefix.upper() + "_GET_" + big_snake_name + "_INTERFACE" ?>
<?py #endif ?>


#define #{MACRO_TYPE}               (#{snake_id}_get_type())
#define #{MACRO_OBJ}(obj)                (G_TYPE_CHECK_INSTANCE_CAST((obj), #{MACRO_TYPE}, #{camel_id}))
#define #{MACRO_IS_OBJ}(obj)             (G_TYPE_CHECK_INSTANCE_TYPE((obj), #{MACRO_TYPE}))
#define #{MACRO_GET_INTERFACE}(obj)      (G_TYPE_INSTANCE_GET_INTERFACE ((obj), #{MACRO_TYPE}, #{camel_id}Interface))

/************ types ************/
typedef struct _#{camel_id}Interface       #{camel_id}Interface;

struct _#{camel_id}Interface
{
    #{parent_class_name} parent_iface;
};

/************ globals ************/


/************ function declarations ************/
GType #{snake_id}_get_type();

G_END_DECLS
#endif /* _#{big_snake_id}_H_ */